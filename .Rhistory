chisq.test(yearandnaics)
stateandnaics = table(h1b$NAICS,h1b$State, drop_na())
yearandnaics = table(h1b$Fiscal.Year, h1b$NAICS)
chisq.test(yearandnaics)
stateandnaics = table(h1b$NAICS,h1b$State, drop_na_())
yearandnaics = table(h1b$Fiscal.Year, h1b$NAICS)
chisq.test(yearandnaics)
stateandnaics = table(h1b$NAICS,h1b$State, na.omit())
yearandnaics = table(h1b$Fiscal.Year, h1b$NAICS)
chisq.test(yearandnaics)
stateandnaics = table(h1b$NAICS,na.omit(h1b$State))
chisq.test(stateandnaics)
inappandnaics = table(h1b$Initial.Approvals, h1b$NAICS)
chisq.test(inappandnaics)
library(dplyr)
library(maps)
h1b <- read.csv('h1b_datahubexport_2009-2019.csv')
#h1b <- h1b[h1b$State %in%state.abb,]
yearandnaics = table(h1b$Fiscal.Year, h1b$NAICS)
chisq.test(yearandnaics)
stateandnaics = table(h1b$NAICS,na.omit(h1b$State))
chisq.test(stateandnaics)
inappandnaics = table(h1b$Initial.Approvals, h1b$NAICS)
chisq.test(inappandnaics)
yearandnaics = table(h1b$Fiscal.Year, h1b$NAICS)
chisq.test(yearandnaics)
stateandnaics = table(h1b$NAICS,na.omit(h1b$State))
chisq.test(stateandnaics)
inappandnaics = table(h1b$Initial.Approvals, h1b$NAICS)
chisq.test(inappandnaics)
library(dplyr)
library(maps)
h1b <- read.csv('h1b_datahubexport_2009-2019.csv')
#h1b <- h1b[h1b$State %in%state.abb,]
str(h1b)
library(dplyr)
library(maps)
h1b <- read.csv('h1b_datahubexport_2009-2019.csv')
#h1b <- h1b[h1b$State %in%state.abb,]
str(h1b)
library(ggplot2)
h1b$naics = as.factor(h1b$NAICS)
# use group by to combine same industry together to calculate the total initial application amount.
initial <- h1b %>% group_by(naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T), #shows total number of initail approvals
totaliniden = sum(Initial.Denials, na.rm = T), # shows total number of initial denials
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T), # shows total number of initial application
iaccptperc = (totaliniaccpt/totalinitial)*100, round(iaccptperc, digits = 2), # percentage of initial approval rate
idenperc = (totaliniden/totalinitial)*100, round(idenperc, digits = 2)) #percentage of initial denial rate
#
# ggplot(initial, aes(x = naics, y = iaccptperc, color = naics, fill = naics)) + # percentage of initial approvals rate and color by industry code
#   geom_bar(stat ="identity") +
#   xlab("NAICS CODE") +
#   ylab("Total Initial Approvals Percentage")
#
# ggsave("Total Initial Approvals Percentage.png", width=12, height=9)
ggplot(initial, aes(x = naics, y = idenperc, color = naics, , fill = naics)) + # percentage of initial denials rate and color by industry code
geom_bar(stat ="identity") +
xlab("NAICS CODE") +
ylab("Total Initial Denials Percentage")
ggsave("Total Denial Approvals Percentage.png", width=12, height=9)
# use group by to combine same industry together to calculate the total continuing application amount.
continuing <- h1b %>% group_by(naics) %>% summarize( totalconaccpt = sum(Continuing.Approvals, na.rm = T),
totalconden = sum(Continuing.Denials, na.rm = T),
totalcontinue = sum(Continuing.Approvals,na.rm = T)+sum(Continuing.Denials,na.rm = T),
caccptperc = (totalconaccpt/totalcontinue) * 100,
cdenperc = ( totalconden /totalcontinue) * 100 )
# ggplot(continuing, aes(x = naics, y = caccptperc, color = naics, fill = naics)) + geom_bar(stat ="identity") + xlab("NAICS CODE") + ylab("Total Continuing Approvals Percentage")
# ggsave("Total Continuing Approvals Percentage.png", width=12, height=9)
ggplot(continuing, aes(x = naics, y = cdenperc, color = naics, fill = naics)) + geom_bar(stat ="identity") + xlab("NAICS CODE") + ylab("Total Continuing Denials Percentage")
ggsave("Total Continuing DenialsPercentage.png", width=12, height=9)
#install.packages("directlabels")
library(directlabels)
initialbyyear <- h1b %>% group_by(Fiscal.Year, naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T),
totaliniden = sum(Initial.Denials, na.rm = T),
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T),
iaccptperc = (totaliniaccpt/totalinitial)*100,
idenperc = (totaliniden/totalinitial)*100)
ggplot(initialbyyear, aes(x=Fiscal.Year, y=iaccptperc)) +
geom_line(aes(color=naics, group=naics), size = 1) +   # create the line by nacis code
ggtitle("Line Plot of Industry and  Initial Approvals Percentage by Year")+
geom_point(aes(color=naics), size=3) +  # for visualization purpose, we set up the point for each year so people can directly see the rate change of industry by year
theme(plot.title = element_text(hjust = 0.5)) +  # since we change the size of the figer, we need to relocate the fig name to center
xlab("Year")+ ylab("Percentage(%)")+  # rename x and y axis names
geom_dl(aes(label = naics, color = naics), method = list(dl.combine("first.polygons", "last.polygons"), cex = 1))+  #set up label for each line
scale_x_continuous(breaks=seq(2009, 2019, 1))+   # changing the scale for both x and y axis
scale_y_continuous(breaks=seq(50, 100, 5))
ggsave("iaccptperc.png", width=12, height=9)
# ggplot(initialbyyear, aes(x=Fiscal.Year, y=idenperc)) +
#     geom_line(aes(color=naics, group=naics), size = 1) +
#     ggtitle("Line Plot of Industry and  Initial Denials Percentage by Year")+
#     geom_point(aes(color=naics), size=3) +
#     theme(plot.title = element_text(hjust = 0.5)) +
#     xlab("Year")+ ylab("Percentage(%)")+
#     geom_dl(aes(label = naics, color = naics), method = list(dl.combine("first.polygons", "last.polygons"), cex = 1))+
#     scale_x_continuous(breaks=seq(2009, 2019, 1))+
#     scale_y_continuous(breaks=seq(50, 100, 5))
# ggsave("idenperc.png", width=12, height=9)
#use group by to combine same industry together to calculate the total continuing application amount.
continuingbyyear <- h1b %>% group_by(Fiscal.Year, naics) %>% summarize(totalconaccpt = sum(Continuing.Approvals, na.rm = T),
totalconden = sum(Continuing.Denials, na.rm = T),
totalcontinue = sum(Continuing.Approvals,na.rm = T)+sum(Continuing.Denials,na.rm = T),
caccptperc = (totalconaccpt/totalcontinue) * 100,
cdenperc = ( totalconden /totalcontinue) * 100 )
ggplot(continuingbyyear, aes(x=Fiscal.Year, y=caccptperc)) +
geom_line(aes(color=naics, group=naics), size = 1) +
ggtitle("Line Plot of Industry and Continuing Approvals Percentage by Year")+
geom_point(aes(color=naics), size=3) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Year")+ ylab("Percentage(%)")+
geom_dl(aes(label = naics, color = naics), method = list(dl.combine("first.polygons", "last.polygons"), cex = 1))+
scale_x_continuous(breaks=seq(2009, 2019, 1))+
scale_y_continuous(breaks=seq(50, 100, 5))
ggsave("caccptperc.png", width=12, height=9)
# ggplot(continuingbyyear, aes(x=Fiscal.Year, y=cdenperc)) +
#     geom_line(aes(color=naics, group=naics),size = 1) +
#     ggtitle("Line Plot of Industry and Continuing Denials Percentage by Year")+
#     geom_point(aes(color=naics), size=3) +
#     theme(plot.title = element_text(hjust = 0.5)) +
#     xlab("Year")+ ylab("Percentage(%)")+
#     geom_dl(aes(label = naics, color = naics), method = list(dl.combine("first.polygons", "last.polygons"), cex = 1))+
#     scale_x_continuous(breaks=seq(2009, 2019, 1))+
#     scale_y_continuous(breaks=seq(50, 100, 5))
#
# ggsave("cdenperc.png", width=12, height=9)
View(initial)
library(ggplot2)
h1b$naics = as.factor(h1b$NAICS)
# use group by to combine same industry together to calculate the total initial application amount.
initial <- h1b %>% group_by(naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T), #shows total number of initail approvals
totaliniden = sum(Initial.Denials, na.rm = T), # shows total number of initial denials
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T), # shows total number of initial application
iaccptperc = (totaliniaccpt/totalinitial)*100, # percentage of initial approval rate
idenperc = (totaliniden/totalinitial)*100) #percentage of initial denial rate
#
# ggplot(initial, aes(x = naics, y = iaccptperc, color = naics, fill = naics)) + # percentage of initial approvals rate and color by industry code
#   geom_bar(stat ="identity") +
#   xlab("NAICS CODE") +
#   ylab("Total Initial Approvals Percentage")
#
# ggsave("Total Initial Approvals Percentage.png", width=12, height=9)
ggplot(initial, aes(x = naics, y = idenperc, color = naics, , fill = naics)) + # percentage of initial denials rate and color by industry code
geom_bar(stat ="identity") +
xlab("NAICS CODE") +
ylab("Total Initial Denials Percentage")
ggsave("Total Denial Approvals Percentage.png", width=12, height=9)
library(ggplot2)
h1b$naics = as.factor(h1b$NAICS)
# use group by to combine same industry together to calculate the total initial application amount.
initial <- h1b %>% group_by(naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T), #shows total number of initail approvals
totaliniden = sum(Initial.Denials, na.rm = T), # shows total number of initial denials
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T), # shows total number of initial application
iaccptperc = (totaliniaccpt/totalinitial)*100, # percentage of initial approval rate
idenperc = (totaliniden/totalinitial)*100) #percentage of initial denial rate
#
# ggplot(initial, aes(x = naics, y = iaccptperc, color = naics, fill = naics)) + # percentage of initial approvals rate and color by industry code
#   geom_bar(stat ="identity") +
#   xlab("NAICS CODE") +
#   ylab("Total Initial Approvals Percentage")
#
# ggsave("Total Initial Approvals Percentage.png", width=12, height=9)
head(5)
ggplot(initial, aes(x = naics, y = idenperc, color = naics, , fill = naics)) + # percentage of initial denials rate and color by industry code
geom_bar(stat ="identity") +
xlab("NAICS CODE") +
ylab("Total Initial Denials Percentage")
ggsave("Total Denial Approvals Percentage.png", width=12, height=9)
library(ggplot2)
h1b$naics = as.factor(h1b$NAICS)
# use group by to combine same industry together to calculate the total initial application amount.
initial <- h1b %>% group_by(naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T), #shows total number of initail approvals
totaliniden = sum(Initial.Denials, na.rm = T), # shows total number of initial denials
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T), # shows total number of initial application
iaccptperc = (totaliniaccpt/totalinitial)*100, # percentage of initial approval rate
idenperc = (totaliniden/totalinitial)*100) #percentage of initial denial rate
#
# ggplot(initial, aes(x = naics, y = iaccptperc, color = naics, fill = naics)) + # percentage of initial approvals rate and color by industry code
#   geom_bar(stat ="identity") +
#   xlab("NAICS CODE") +
#   ylab("Total Initial Approvals Percentage")
#
# ggsave("Total Initial Approvals Percentage.png", width=12, height=9)
View(initial,5)
ggplot(initial, aes(x = naics, y = idenperc, color = naics, , fill = naics)) + # percentage of initial denials rate and color by industry code
geom_bar(stat ="identity") +
xlab("NAICS CODE") +
ylab("Total Initial Denials Percentage")
ggsave("Total Denial Approvals Percentage.png", width=12, height=9)
library(ggplot2)
h1b$naics = as.factor(h1b$NAICS)
# use group by to combine same industry together to calculate the total initial application amount.
initial <- h1b %>% group_by(naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T), #shows total number of initail approvals
totaliniden = sum(Initial.Denials, na.rm = T), # shows total number of initial denials
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T), # shows total number of initial application
iaccptperc = (totaliniaccpt/totalinitial)*100, # percentage of initial approval rate
idenperc = (totaliniden/totalinitial)*100) #percentage of initial denial rate
#
# ggplot(initial, aes(x = naics, y = iaccptperc, color = naics, fill = naics)) + # percentage of initial approvals rate and color by industry code
#   geom_bar(stat ="identity") +
#   xlab("NAICS CODE") +
#   ylab("Total Initial Approvals Percentage")
#
# ggsave("Total Initial Approvals Percentage.png", width=12, height=9)
head(initial,n=5)
ggplot(initial, aes(x = naics, y = idenperc, color = naics, , fill = naics)) + # percentage of initial denials rate and color by industry code
geom_bar(stat ="identity") +
xlab("NAICS CODE") +
ylab("Total Initial Denials Percentage")
ggsave("Total Denial Approvals Percentage.png", width=12, height=9)
# use group by to combine same industry together to calculate the total continuing application amount.
continuing <- h1b %>% group_by(naics) %>% summarize( totalconaccpt = sum(Continuing.Approvals, na.rm = T),
totalconden = sum(Continuing.Denials, na.rm = T),
totalcontinue = sum(Continuing.Approvals,na.rm = T)+sum(Continuing.Denials,na.rm = T),
caccptperc = (totalconaccpt/totalcontinue) * 100,
cdenperc = ( totalconden /totalcontinue) * 100 )
# ggplot(continuing, aes(x = naics, y = caccptperc, color = naics, fill = naics)) + geom_bar(stat ="identity") + xlab("NAICS CODE") + ylab("Total Continuing Approvals Percentage")
# ggsave("Total Continuing Approvals Percentage.png", width=12, height=9)
head(continuing,n=5)
ggplot(continuing, aes(x = naics, y = cdenperc, color = naics, fill = naics)) + geom_bar(stat ="identity") + xlab("NAICS CODE") + ylab("Total Continuing Denials Percentage")
ggsave("Total Continuing DenialsPercentage.png", width=12, height=9)
#install.packages("directlabels")
library(directlabels)
initialbyyear <- h1b %>% group_by(Fiscal.Year, naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T),
totaliniden = sum(Initial.Denials, na.rm = T),
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T),
iaccptperc = (totaliniaccpt/totalinitial)*100,
idenperc = (totaliniden/totalinitial)*100)
head(initialbyyear,n=5)
ggplot(initialbyyear, aes(x=Fiscal.Year, y=iaccptperc)) +
geom_line(aes(color=naics, group=naics), size = 1) +   # create the line by nacis code
ggtitle("Line Plot of Industry and  Initial Approvals Percentage by Year")+
geom_point(aes(color=naics), size=3) +  # for visualization purpose, we set up the point for each year so people can directly see the rate change of industry by year
theme(plot.title = element_text(hjust = 0.5)) +  # since we change the size of the figer, we need to relocate the fig name to center
xlab("Year")+ ylab("Percentage(%)")+  # rename x and y axis names
geom_dl(aes(label = naics, color = naics), method = list(dl.combine("first.polygons", "last.polygons"), cex = 1))+  #set up label for each line
scale_x_continuous(breaks=seq(2009, 2019, 1))+   # changing the scale for both x and y axis
scale_y_continuous(breaks=seq(50, 100, 5))
ggsave("iaccptperc.png", width=12, height=9)
# ggplot(initialbyyear, aes(x=Fiscal.Year, y=idenperc)) +
#     geom_line(aes(color=naics, group=naics), size = 1) +
#     ggtitle("Line Plot of Industry and  Initial Denials Percentage by Year")+
#     geom_point(aes(color=naics), size=3) +
#     theme(plot.title = element_text(hjust = 0.5)) +
#     xlab("Year")+ ylab("Percentage(%)")+
#     geom_dl(aes(label = naics, color = naics), method = list(dl.combine("first.polygons", "last.polygons"), cex = 1))+
#     scale_x_continuous(breaks=seq(2009, 2019, 1))+
#     scale_y_continuous(breaks=seq(50, 100, 5))
# ggsave("idenperc.png", width=12, height=9)
#use group by to combine same industry together to calculate the total continuing application amount.
continuingbyyear <- h1b %>% group_by(Fiscal.Year, naics) %>% summarize(totalconaccpt = sum(Continuing.Approvals, na.rm = T),
totalconden = sum(Continuing.Denials, na.rm = T),
totalcontinue = sum(Continuing.Approvals,na.rm = T)+sum(Continuing.Denials,na.rm = T),
caccptperc = (totalconaccpt/totalcontinue) * 100,
cdenperc = ( totalconden /totalcontinue) * 100 )
head(continuingbyyear,n=5)
ggplot(continuingbyyear, aes(x=Fiscal.Year, y=caccptperc)) +
geom_line(aes(color=naics, group=naics), size = 1) +
ggtitle("Line Plot of Industry and Continuing Approvals Percentage by Year")+
geom_point(aes(color=naics), size=3) +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Year")+ ylab("Percentage(%)")+
geom_dl(aes(label = naics, color = naics), method = list(dl.combine("first.polygons", "last.polygons"), cex = 1))+
scale_x_continuous(breaks=seq(2009, 2019, 1))+
scale_y_continuous(breaks=seq(50, 100, 5))
ggsave("caccptperc.png", width=12, height=9)
# ggplot(continuingbyyear, aes(x=Fiscal.Year, y=cdenperc)) +
#     geom_line(aes(color=naics, group=naics),size = 1) +
#     ggtitle("Line Plot of Industry and Continuing Denials Percentage by Year")+
#     geom_point(aes(color=naics), size=3) +
#     theme(plot.title = element_text(hjust = 0.5)) +
#     xlab("Year")+ ylab("Percentage(%)")+
#     geom_dl(aes(label = naics, color = naics), method = list(dl.combine("first.polygons", "last.polygons"), cex = 1))+
#     scale_x_continuous(breaks=seq(2009, 2019, 1))+
#     scale_y_continuous(breaks=seq(50, 100, 5))
#
# ggsave("cdenperc.png", width=12, height=9)
library(ggplot2)
h1b$naics = as.factor(h1b$NAICS)
# use group by to combine same industry together to calculate the total initial application amount.
initial <- h1b %>% group_by(naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T), #shows total number of initail approvals
totaliniden = sum(Initial.Denials, na.rm = T), # shows total number of initial denials
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T), # shows total number of initial application
iaccptperc = (totaliniaccpt/totalinitial)*100, # percentage of initial approval rate
idenperc = (totaliniden/totalinitial)*100) #percentage of initial denial rate
#
# ggplot(initial, aes(x = naics, y = iaccptperc, color = naics, fill = naics)) + # percentage of initial approvals rate and color by industry code
#   geom_bar(stat ="identity") +
#   xlab("NAICS CODE") +
#   ylab("Total Initial Approvals Percentage")
#
# ggsave("Total Initial Approvals Percentage.png", width=12, height=9)
ggplot(initial, aes(x = naics, y = idenperc, color = naics, , fill = naics)) + # percentage of initial denials rate and color by industry code
geom_bar(stat ="identity") +
xlab("NAICS CODE") +
ylab("Total Initial Denials Percentage")
ggsave("Total Denial Approvals Percentage.png", width=12, height=9)
plot_ly(initial, x = ~naics, y=~idenperc, type = "bar", text = idenperc, textposition = "auto", marker = list(color = naics, line = list(color = naics))) %>% layer("Total Denial Approvals Percentage", xaxis = "NAICS CODE", yaxis = "Total Initial Denials Percentage")
library(dplyr)
library(maps)
library(plotly)
h1b <- read.csv('h1b_datahubexport_2009-2019.csv')
#h1b <- h1b[h1b$State %in%state.abb,]
library(ggplot2)
h1b$naics = as.factor(h1b$NAICS)
# use group by to combine same industry together to calculate the total initial application amount.
initial <- h1b %>% group_by(naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T), #shows total number of initail approvals
totaliniden = sum(Initial.Denials, na.rm = T), # shows total number of initial denials
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T), # shows total number of initial application
iaccptperc = (totaliniaccpt/totalinitial)*100, # percentage of initial approval rate
idenperc = (totaliniden/totalinitial)*100) #percentage of initial denial rate
#
# ggplot(initial, aes(x = naics, y = iaccptperc, color = naics, fill = naics)) + # percentage of initial approvals rate and color by industry code
#   geom_bar(stat ="identity") +
#   xlab("NAICS CODE") +
#   ylab("Total Initial Approvals Percentage")
#
# ggsave("Total Initial Approvals Percentage.png", width=12, height=9)
ggplot(initial, aes(x = naics, y = idenperc, color = naics, , fill = naics)) + # percentage of initial denials rate and color by industry code
geom_bar(stat ="identity") +
xlab("NAICS CODE") +
ylab("Total Initial Denials Percentage")
ggsave("Total Denial Approvals Percentage.png", width=12, height=9)
plot_ly(initial, x = ~naics, y=~idenperc, type = "bar", text = idenperc, textposition = "auto", marker = list(color = naics, line = list(color = naics))) %>% layer("Total Denial Approvals Percentage", xaxis = "NAICS CODE", yaxis = "Total Initial Denials Percentage")
library(ggplot2)
h1b$naics = as.factor(h1b$NAICS)
# use group by to combine same industry together to calculate the total initial application amount.
initial <- h1b %>% group_by(naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T), #shows total number of initail approvals
totaliniden = sum(Initial.Denials, na.rm = T), # shows total number of initial denials
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T), # shows total number of initial application
iaccptperc = (totaliniaccpt/totalinitial)*100, # percentage of initial approval rate
idenperc = (totaliniden/totalinitial)*100) #percentage of initial denial rate
#
# ggplot(initial, aes(x = naics, y = iaccptperc, color = naics, fill = naics)) + # percentage of initial approvals rate and color by industry code
#   geom_bar(stat ="identity") +
#   xlab("NAICS CODE") +
#   ylab("Total Initial Approvals Percentage")
#
# ggsave("Total Initial Approvals Percentage.png", width=12, height=9)
ggplot(initial, aes(x = naics, y = idenperc, color = naics, , fill = naics)) + # percentage of initial denials rate and color by industry code
geom_bar(stat ="identity") +
xlab("NAICS CODE") +
ylab("Total Initial Denials Percentage")
ggsave("Total Denial Approvals Percentage.png", width=12, height=9)
plot_ly(initial, x = ~naics, y=~idenperc, type = "bar", text = idenperc, textposition = "auto", marker = list(color = naics, line = list(color = naics))) %>% layer("Total Denial Approvals Percentage", xaxis = "NAICS CODE", yaxis = "Total Initial Denials Percentage")
library(ggplot2)
h1b$naics = as.factor(h1b$NAICS)
# use group by to combine same industry together to calculate the total initial application amount.
initial <- h1b %>% group_by(naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T), #shows total number of initail approvals
totaliniden = sum(Initial.Denials, na.rm = T), # shows total number of initial denials
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T), # shows total number of initial application
iaccptperc = (totaliniaccpt/totalinitial)*100, # percentage of initial approval rate
idenperc = (totaliniden/totalinitial)*100) #percentage of initial denial rate
#
# ggplot(initial, aes(x = naics, y = iaccptperc, color = naics, fill = naics)) + # percentage of initial approvals rate and color by industry code
#   geom_bar(stat ="identity") +
#   xlab("NAICS CODE") +
#   ylab("Total Initial Approvals Percentage")
#
# ggsave("Total Initial Approvals Percentage.png", width=12, height=9)
ggplot(initial, aes(x = naics, y = idenperc, color = naics, , fill = naics)) + # percentage of initial denials rate and color by industry code
geom_bar(stat ="identity") +
xlab("NAICS CODE") +
ylab("Total Initial Denials Percentage")
ggsave("Total Denial Approvals Percentage.png", width=12, height=9)
plot_ly(initial, x = ~naics, y=~idenperc, type = "bar", textposition = "auto", marker = list(color = naics, line = list(color = naics))) %>% layer("Total Denial Approvals Percentage", xaxis = "NAICS CODE", yaxis = "Total Initial Denials Percentage")
library(ggplot2)
h1b$naics = as.factor(h1b$NAICS)
# use group by to combine same industry together to calculate the total initial application amount.
initial <- h1b %>% group_by(naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T), #shows total number of initail approvals
totaliniden = sum(Initial.Denials, na.rm = T), # shows total number of initial denials
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T), # shows total number of initial application
iaccptperc = (totaliniaccpt/totalinitial)*100, # percentage of initial approval rate
idenperc = (totaliniden/totalinitial)*100) #percentage of initial denial rate
#
# ggplot(initial, aes(x = naics, y = iaccptperc, color = naics, fill = naics)) + # percentage of initial approvals rate and color by industry code
#   geom_bar(stat ="identity") +
#   xlab("NAICS CODE") +
#   ylab("Total Initial Approvals Percentage")
#
# ggsave("Total Initial Approvals Percentage.png", width=12, height=9)
ggplot(initial, aes(x = naics, y = idenperc, color = naics, , fill = naics)) + # percentage of initial denials rate and color by industry code
geom_bar(stat ="identity") +
xlab("NAICS CODE") +
ylab("Total Initial Denials Percentage")
ggsave("Total Denial Approvals Percentage.png", width=12, height=9)
View(initial)
View(initialbyyear)
View(continuing)
#install.packages("directlabels")
library(directlabels)
initialbyyear <- h1b %>% group_by(Fiscal.Year, naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T),
totaliniden = sum(Initial.Denials, na.rm = T),
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T),
iaccptperc = (totaliniaccpt/totalinitial)*100,
idenperc = (totaliniden/totalinitial)*100)
library(dplyr)
library(maps)
h1b <- read.csv('h1b_datahubexport_2009-2019.csv')
#h1b <- h1b[h1b$State %in%state.abb,]
str(h1b)
library(ggplot2)
h1b$naics = as.factor(h1b$NAICS)
# use group by to combine same industry together to calculate the total initial application amount.
initial <- h1b %>% group_by(naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T), #shows total number of initail approvals
totaliniden = sum(Initial.Denials, na.rm = T), # shows total number of initial denials
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T), # shows total number of initial application
iaccptperc = (totaliniaccpt/totalinitial)*100, # percentage of initial approval rate
idenperc = (totaliniden/totalinitial)*100) #percentage of initial denial rate
#
# ggplot(initial, aes(x = naics, y = iaccptperc, color = naics, fill = naics)) + # percentage of initial approvals rate and color by industry code
#   geom_bar(stat ="identity") +
#   xlab("NAICS CODE") +
#   ylab("Total Initial Approvals Percentage")
#
# ggsave("Total Initial Approvals Percentage.png", width=12, height=9)
ggplot(initial, aes(x = naics, y = idenperc, color = naics, , fill = naics)) + # percentage of initial denials rate and color by industry code
geom_bar(stat ="identity") +
xlab("NAICS CODE") +
ylab("Total Initial Denials Percentage")
ggsave("Total Denial Approvals Percentage.png", width=12, height=9)
# use group by to combine same industry together to calculate the total continuing application amount.
continuing <- h1b %>% group_by(naics) %>% summarize( totalconaccpt = sum(Continuing.Approvals, na.rm = T),
totalconden = sum(Continuing.Denials, na.rm = T),
totalcontinue = sum(Continuing.Approvals,na.rm = T)+sum(Continuing.Denials,na.rm = T),
caccptperc = (totalconaccpt/totalcontinue) * 100,
cdenperc = ( totalconden /totalcontinue) * 100 )
# ggplot(continuing, aes(x = naics, y = caccptperc, color = naics, fill = naics)) + geom_bar(stat ="identity") + xlab("NAICS CODE") + ylab("Total Continuing Approvals Percentage")
# ggsave("Total Continuing Approvals Percentage.png", width=12, height=9)
ggplot(continuing, aes(x = naics, y = cdenperc, color = naics, fill = naics)) + geom_bar(stat ="identity") + xlab("NAICS CODE") + ylab("Total Continuing Denials Percentage")
ggsave("Total Continuing DenialsPercentage.png", width=12, height=9)
#install.packages("directlabels")
library(directlabels)
initialbyyear <- h1b %>% group_by(Fiscal.Year, naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T),
totaliniden = sum(Initial.Denials, na.rm = T),
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T),
iaccptperc = (totaliniaccpt/totalinitial)*100,
idenperc = (totaliniden/totalinitial)*100)
ggplot(initialbyyear, aes(x=Fiscal.Year, y=iaccptperc)) +
geom_line(aes(color=naics, group=naics), size = 1) +   # create the line by nacis code
ggtitle("Line Plot of Industry and  Initial Approvals Percentage by Year")+
geom_point(aes(color=naics), size=3) +  # for visualization purpose, we set up the point for each year so people can directly see the rate change of industry by year
theme(plot.title = element_text(hjust = 0.5)) +  # since we change the size of the figer, we need to relocate the fig name to center
xlab("Year")+ ylab("Percentage(%)")+  # rename x and y axis names
geom_dl(aes(label = naics, color = naics), method = list(dl.combine("first.polygons", "last.polygons"), cex = 1))+  #set up label for each line
scale_x_continuous(breaks=seq(2009, 2019, 1))+   # changing the scale for both x and y axis
scale_y_continuous(breaks=seq(50, 100, 5))
ggsave("iaccptperc.png", width=12, height=9)
# ggplot(initialbyyear, aes(x=Fiscal.Year, y=idenperc)) +
#     geom_line(aes(color=naics, group=naics), size = 1) +
#     ggtitle("Line Plot of Industry and  Initial Denials Percentage by Year")+
#     geom_point(aes(color=naics), size=3) +
#     theme(plot.title = element_text(hjust = 0.5)) +
#     xlab("Year")+ ylab("Percentage(%)")+
#     geom_dl(aes(label = naics, color = naics), method = list(dl.combine("first.polygons", "last.polygons"), cex = 1))+
#     scale_x_continuous(breaks=seq(2009, 2019, 1))+
#     scale_y_continuous(breaks=seq(50, 100, 5))
# ggsave("idenperc.png", width=12, height=9)
#install.packages("directlabels")
library(directlabels)
initialbyyear <- h1b %>% group_by(Fiscal.Year, naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T),
totaliniden = sum(Initial.Denials, na.rm = T),
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T),
iaccptperc = (totaliniaccpt/totalinitial)*100,
idenperc = (totaliniden/totalinitial)*100)
ggplot(initialbyyear, aes(x=Fiscal.Year, y=iaccptperc)) +
geom_line(aes(color=naics, group=naics), size = 1) +   # create the line by nacis code
ggtitle("Line Plot of Industry and  Initial Approvals Percentage by Year")+
geom_point(aes(color=naics), size=3) +  # for visualization purpose, we set up the point for each year so people can directly see the rate change of industry by year
theme(plot.title = element_text(hjust = 0.5)) +  # since we change the size of the figer, we need to relocate the fig name to center
xlab("Year")+ ylab("Percentage(%)")+  # rename x and y axis names
geom_dl(aes(label = naics, color = naics), method = list(dl.combine("first.polygons", "last.polygons"), cex = 1))+  #set up label for each line
scale_x_continuous(breaks=seq(2009, 2019, 1))+   # changing the scale for both x and y axis
scale_y_continuous(breaks=seq(50, 100, 5))
ggsave("iaccptperc.png", width=12, height=9)
write.csv(initialbyyear, file = "initialbyyear")
# ggplot(initialbyyear, aes(x=Fiscal.Year, y=idenperc)) +
#     geom_line(aes(color=naics, group=naics), size = 1) +
#     ggtitle("Line Plot of Industry and  Initial Denials Percentage by Year")+
#     geom_point(aes(color=naics), size=3) +
#     theme(plot.title = element_text(hjust = 0.5)) +
#     xlab("Year")+ ylab("Percentage(%)")+
#     geom_dl(aes(label = naics, color = naics), method = list(dl.combine("first.polygons", "last.polygons"), cex = 1))+
#     scale_x_continuous(breaks=seq(2009, 2019, 1))+
#     scale_y_continuous(breaks=seq(50, 100, 5))
# ggsave("idenperc.png", width=12, height=9)
#install.packages("directlabels")
library(directlabels)
initialbyyear <- h1b %>% group_by(Fiscal.Year, naics) %>% summarize( totaliniaccpt = sum(Initial.Approvals, na.rm = T),
totaliniden = sum(Initial.Denials, na.rm = T),
totalinitial = sum(Initial.Approvals,na.rm = T)+sum(Initial.Denials,na.rm = T),
iaccptperc = (totaliniaccpt/totalinitial)*100,
idenperc = (totaliniden/totalinitial)*100)
ggplot(initialbyyear, aes(x=Fiscal.Year, y=iaccptperc)) +
geom_line(aes(color=naics, group=naics), size = 1) +   # create the line by nacis code
ggtitle("Line Plot of Industry and  Initial Approvals Percentage by Year")+
geom_point(aes(color=naics), size=3) +  # for visualization purpose, we set up the point for each year so people can directly see the rate change of industry by year
theme(plot.title = element_text(hjust = 0.5)) +  # since we change the size of the figer, we need to relocate the fig name to center
xlab("Year")+ ylab("Percentage(%)")+  # rename x and y axis names
geom_dl(aes(label = naics, color = naics), method = list(dl.combine("first.polygons", "last.polygons"), cex = 1))+  #set up label for each line
scale_x_continuous(breaks=seq(2009, 2019, 1))+   # changing the scale for both x and y axis
scale_y_continuous(breaks=seq(50, 100, 5))
ggsave("iaccptperc.png", width=12, height=9)
write.csv(initialbyyear, file = "initialbyyear.csv")
# ggplot(initialbyyear, aes(x=Fiscal.Year, y=idenperc)) +
#     geom_line(aes(color=naics, group=naics), size = 1) +
#     ggtitle("Line Plot of Industry and  Initial Denials Percentage by Year")+
#     geom_point(aes(color=naics), size=3) +
#     theme(plot.title = element_text(hjust = 0.5)) +
#     xlab("Year")+ ylab("Percentage(%)")+
#     geom_dl(aes(label = naics, color = naics), method = list(dl.combine("first.polygons", "last.polygons"), cex = 1))+
#     scale_x_continuous(breaks=seq(2009, 2019, 1))+
#     scale_y_continuous(breaks=seq(50, 100, 5))
# ggsave("idenperc.png", width=12, height=9)
